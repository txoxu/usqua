<% breadcrumb :new_whiskey %>
<div class="bg-body-secondary shadow-lg rounded pt-3 pb-3">
  <div class="container">
    <div class="row">
      <div class="col-md-6">
        <div class="whiskey-frame">
          <div class="whiskey-new">
            <h1><%= t('.title') %></h1>
          </div>
          <%= form_with model: @whiskey, id: 'new_whiskey', local: true do |f| %>
            <div class="mb-3">
              <%= f.label :name %><span class="text-danger">*</span>
              <%= f.text_field :name, class: "form-control", required: true %>
            </div>

            <div class="mb-3">
              <%= f.label :text %>
              <%= f.text_area :text, class: "form-control" %>
            </div>

            <div class="mb-3" id="form-quantity" style="display:none;">
              <%= f.label :remmaining_quantity_id, "ウイスキーの量" %>
              <%= f.collection_radio_buttons :remmaining_quantity_id, @quantities, :id, :quantity, required: true do |rb| %>
                <div class="form-check form-check-inline">
                  <%= rb.radio_button(class: "form-check-input") %>
                  <%= rb.label(class: "form-check-label") %>
                </div>
              <% end %>

              <div class="form-check form-check-inline">
                <%= f.radio_button :remmaining_quantity_id, nil, class: "form-check-input" %>
                <%= f.label :remmaining_quantity_id, "指定しない", class: "form-check-label" %>
              </div>
            </div>

            <div class="mb-3" id="form-image">
              <%= f.label :image %>
              <%= f.file_field :image, class: "form-control" %>
            </div>
          <div class="row">
            <div class="btn-group-vertical col-3" role="group" aria-label="Vertical radio toggle button group">
              <input type="radio" class="btn-check" name="vbtn-radio" id="vbtn-radio1" autocomplete="off" checked>
              <label class="btn btn-outline-danger" for="vbtn-radio1">画像ファイル</label>
              <input type="radio" class="btn-check" name="vbtn-radio" id="vbtn-radio2" autocomplete="off">
              <label class="btn btn-outline-danger" for="vbtn-radio2">量機能</label>
            </div>
            <div class="col-9">
              <p>*実際の写真を使って量を管理することも、提供されている画像を参考に設定することも可能です。</p>
            </div>
          </div>

            <div class="mb-3">
              <%= f.label :category_names %><span class="text-danger">*</span>
              <%= f.select :category_names, @category_names.map { |c| [c.category_name, c.category_name] }, { prompt: "選択してください" }, { class: "form-control", required: true } %>
            </div>

            <div class="mb-3">
              <%= f.label :category_types %><span class="text-danger">*</span>
              <%= f.select :category_types, @category_types.map { |c| [c.category_type, c.category_type] }, { prompt: "選択してください" }, { class: "form-control", required: true } %>
            </div>

            <div class="actions">
              <%= f.submit t('helpers.submit.create'), class: "btn btn-primary" %>
            </div>
          <% end %>
        </div>
      </div>


      <div class="col-md-6" id='previews-form'>
        <div class="image-container text-center">
          <div id="previews" class="border p-3">
            <%= t('helpers.preview') %>
          </div>
        </div>
      </div>

      <div class="col-md-6" id='quantity-previews-form'>
        <div class="quantity-container text-center">
          <div id="quantity-previews" class="border p-3">
            <%= t('helpers.preview') %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('turbo:load', function() {

    console.log('turbo無効化');

  const whiskeyForm = document.getElementById("new_whiskey") || document.getElementById("edit_whiskey");

  if (!whiskeyForm) return;

  const previewList = document.querySelector(".image-container #previews");
  const fileField = document.querySelector('input[type="file"][name="whiskey[image]"]');

  if (previewList && previewList.innerHTML.trim() !== "") {
    // 既に画像が表示されている場合の処理
    previewList.style.display = "block";
  }

  fileField.addEventListener("change", function(e) {
    const alreadyPreview = document.querySelector(".preview");
    if (alreadyPreview) {
      alreadyPreview.remove();
    }

    const file = e.target.files[0];
    const blob = window.URL.createObjectURL(file);

    const previewWrapper = document.createElement("div");
    previewWrapper.setAttribute("class", "preview");

    const previewImage = document.createElement("img");
    previewImage.setAttribute("class", "preview-image");
    previewImage.setAttribute("src", blob);

    previewWrapper.appendChild(previewImage);
    previewList.appendChild(previewWrapper);
    previewList.style.display = "block";
  });
});

  document.addEventListener('turbo:load', function() {
    const radioButtons = document.querySelectorAll('input[name="whiskey[remmaining_quantity_id]"]');
    const preview = document.getElementById('quantity-previews');

const selectedQuantityId = document.querySelector('input[name="whiskey[remmaining_quantity_id]"]:checked');
  if (selectedQuantityId) {
    const initialQuantity = findQuantityById(selectedQuantityId.value);
    if (initialQuantity && initialQuantity.quantity_image) {
      const imagePath = '/assets/images/' + initialQuantity.quantity_image;
      preview.innerHTML = `<img src="${imagePath}" class="preview-image">`;
      preview.style.display = 'block';
    }
  }
    radioButtons.forEach(radio => {
      radio.addEventListener('change', function () {
        const selectedQuantityId = this.value;
        const selectedQuantity = findQuantityById(selectedQuantityId);
        
        if (selectedQuantity && selectedQuantity.quantity_image) {
          const imagePath = '/assets/' + selectedQuantity.quantity_image;
          preview.innerHTML = `<img src="${imagePath}" class="preview-image" style="width: 450px; height: 450px;">`;
          preview.style.display = 'block';
        } else {
          preview.innerHTML = '';
          preview.style.display = 'none';
        }
      });
    });

    function findQuantityById(id) {
      const quantities = [
        { id: 1, quantity_image: '0ml.jpg' },
        { id: 2, quantity_image: '100ml.jpg' },
        { id: 3, quantity_image: '200ml.jpg' },
        { id: 4, quantity_image: '300ml.jpg' },
        { id: 5, quantity_image: '400ml.jpg' },
        { id: 6, quantity_image: '500ml.jpg' },
        { id: 7, quantity_image: '600ml.jpg' },
        { id: 8, quantity_image: '700ml.jpg' }
      ];

      return quantities.find(quantity => quantity.id.toString() === id);
    }
  });


  document.addEventListener('turbo:load', function() {
    const radioImage = document.getElementById('vbtn-radio1');
    const radioQuantity = document.getElementById('vbtn-radio2');

    const formImage = document.getElementById('form-image');
    const formQuantity = document.getElementById('form-quantity');
    const formImagePreviews = document.getElementById('previews-form');
    const formQuantityPreviews = document.getElementById('quantity-previews-form');

    if (radioImage.checked) {
      formImage.style.display = 'block';
      formImagePreviews.style.display = 'block';
      formQuantity.style.display = 'none';
      formQuantityPreviews.style.display = 'none';
    }

    radioImage.addEventListener('change', function() {
      if (radioImage.checked) {
        formImage.style.display = 'block';
      formImagePreviews.style.display = 'block';
      formQuantity.style.display = 'none';
      formQuantityPreviews.style.display = 'none';
      }
    });

    radioQuantity.addEventListener('change', function() {
      if (radioQuantity.checked) {
        formImage.style.display = 'none';
      formImagePreviews.style.display = 'none';
      formQuantity.style.display = 'block';
      formQuantityPreviews.style.display = 'block';
      }
    });
  });
</script>
